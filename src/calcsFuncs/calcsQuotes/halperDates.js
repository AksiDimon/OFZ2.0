//—Ñ—É–Ω–∫—Ü–∏—è –ø–æ–º–æ–≥–∞—é—â–∞—è –ø—Ä–∏–±–∞–≤–∏—Ç—å –æ–¥–∏–Ω –≥–æ–¥, –∫ –∫–æ—Ä–µ–∫—Ç–Ω–æ–π –¥–∞—Ç–µ example('2024-12-22')
export function plusOneAge(date) {
  const [year, month, day] = date.split('-').map((val) => Number(val));

  return [year + 1, month, day]
    .map((x) => x.toString().padStart(2, '0'))
    .join('-');
}

//—Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è –≤ –Ω—É–∂–Ω—É—é —Ö–æ—Ä–º—É  —Å–µ–≥–æ–¥–Ω—è—à–Ω–µ–π(—Ç–µ–∫—É—â–µ–π) –¥–∞—Ç—ã; example('2024-12-22')

export const getTodayDate = () => {
    const today = new Date();
    return [today.getFullYear(), today.getMonth() + 1, today.getDate()]
      .map((x) => x.toString().padStart(2, '0'))
      .join('-');
  };



//–§—É–Ω–∫—Ü–∏—è –≤—ã—á–∏—Å–ª—è–µ—Ç –ø–æ—Å–ª–µ–¥–Ω—é—é –¥–∞—Ç—É, –Ω–∞—á–∏–Ω–∞—è —Å —Ç–µ–∫—É—â–µ–π –¥–∞—Ç—ã, –∫–æ—Ç–æ—Ä–∞—è –±–æ–ª—å—à–µ –∏–ª–∏ —Ä–∞–≤–Ω–∞ —Å–∞–º–æ–π –ø–æ–∑–¥–Ω–µ–π –¥–∞—Ç–µ –≤ –º–∞—Å—Å–∏–≤–µ.
 export function calculateLastDate(todayDate, sortedDates, plusOneAge) {
    let year = todayDate;
    while (year < sortedDates.at(-1)) {
        year = plusOneAge(year);
        // console.log(year, '%%%%%%%%%%')
    }
    return year;
}

// const lastDate = calculateLastDate(todayDate, sortedDates, plusOneAge);



//–§—É–Ω–∫—Ü–∏—è –ø—Ä–µ–≤—Ä–∞—â–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é –¥–∞—Ç—É –≤ –º–∏–ª–∏—Å–µ–∫—É–Ω–¥—ã
export function date2ms (date) {
    const [y, m, d] = date.split("-").map(Number);
    return +new Date(y, m - 1, d);
}


// —Ñ—É–Ω–∫—Ü–∏—è –≤–æ–∑–≤—Ä–∞—â–∞—é—â–∞—è –∫–ª–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π –≤ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–º –º–µ—Å—è—Ü–µ.
 function daysInMonth (month, year) {
    const arry =  [0,2,4,6,7,9,11];
    const arr = [1,3,5,7,8,10,12] //–º–∞—Å—Å–∏–≤ –±—ã–ª —Å–æ–∑–¥–∞–Ω –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–∏ whoWork
    if(arry.includes(month)) {
        return 31 
    } 
    if(month !== 1) {
        return 30
    }
    if(year % 400 === 0) {
        return 29
    }
    if(year % 100 === 0) {
        return 28
    }
    if(year % 4 === 0) {
        return 29
    }
    return 28

}


//—Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —É–±–∏—Ä–∞–Ω–∏—è 0 –ø–æ—Å–ª–µ –∑–∞–ø—è—Ç–æ–π –≤ –≥–æ–¥–∞—Ö –≤ –¥–µ—Å—è—Ç–∏—á–Ω–æ–π –¥—Ä–æ–±–∏
export function integerNumber (num) {
    if(num === 0 || num === '0') return num
    console.log(num, 'üëø')
    const arr = num.split('.');
    // if(arr[1].length > 1) return num
    console.log(arr, arr[1][0])
    if(Number(arr[1][0]) === 0) {
      return arr[0]
    }
    return num
  }

  //—Ñ—É–Ω–∫—Ü–∏—è –ø–æ–¥—Å—á–µ—Ç–∞ –¥–æ –∫–æ–Ω—Ü–∞ –æ—Ç —Å–µ–≥–æ–¥–Ω—è—à–Ω–∏–π –¥–∞—Ç—ã –¥–æ –ª—é–±–æ–π –≤ –±—É–¥—É—â–µ–º, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≤ –¥–µ—Å—è—Ç–∏—á–Ω–æ–π –¥—Ä–æ–±–∏.
export function calculateDecimalYears(todayDay, endDay, counterZoom) {
    if(todayDay === endDay) return 0
    // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Å—Ç—Ä–æ–∫–∏ –≤ –æ–±—ä–µ–∫—Ç—ã Date
    const startDate = new Date(todayDay);
    const endDate = new Date(endDay);
  
    // –ü–æ–ª—É—á–∞–µ–º —Ä–∞–∑–Ω–∏—Ü—É –≤ –¥–Ω—è—Ö –º–µ–∂–¥—É –¥–≤—É–º—è –¥–∞—Ç–∞–º–∏
    const diffInMs = endDate - startDate;
    const diffInDays = diffInMs / (1000 * 60 * 60 * 24);
  
    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –¥–Ω–µ–π –≤ –≥–æ–¥—É
    const getDaysInYear = (year) => (new Date(year, 11, 31) - new Date(year, 0, 0)) / (1000 * 60 * 60 * 24);
  
    // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –ø–æ–ª–Ω—ã–µ –≥–æ–¥—ã –º–µ–∂–¥—É –¥–∞—Ç–∞–º–∏
    const startYear = startDate.getFullYear();
    const endYear = endDate.getFullYear();
  
    let remainingDays = diffInDays;
    let fullYears = 0;
  
    for (let year = startYear; year < endYear; year++) {
      const daysInYear = getDaysInYear(year);
      if (remainingDays >= daysInYear) {
        fullYears++;
        remainingDays -= daysInYear;
      } else {
        break;
      }
    }
  
    // –í—ã—á–∏—Å–ª—è–µ–º –¥—Ä–æ–±–Ω—É—é —á–∞—Å—Ç—å, –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—é—â—É—é –º–µ—Å—è—Ü—ã
    const currentYearDays = getDaysInYear(startYear + fullYears);
    const decimalPart = remainingDays / currentYearDays;


    // –ò—Ç–æ–≥–æ–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    const result = fullYears + decimalPart;
    if(counterZoom === 3) {
      return result.toFixed(2)
    }
    
    return result.toFixed(1); 
  }




export function halperRestMap(arr, todayDate) {
    console.log({arr, todayDate})

    const sortedDates = arr.map(ofz => ofz.endDate).sort();
    const sortedPercents = arr.map(ofz => ofz.percent).sort((a, b) => a - b);


    //–≤—ã—á–∏—Å–ª—è–µ—Ç –ø–æ—Å–ª–µ–¥–Ω—é—é –¥–∞—Ç—É, –Ω–∞—á–∏–Ω–∞—è —Å —Ç–µ–∫—É—â–µ–π –¥–∞—Ç—ã, –∫–æ—Ç–æ—Ä–∞—è –±–æ–ª—å—à–µ –∏–ª–∏ —Ä–∞–≤–Ω–∞ —Å–∞–º–æ–π –ø–æ–∑–¥–Ω–µ–π –¥–∞—Ç–µ –≤ –º–∞—Å—Å–∏–≤–µ.
    const lastDate = calculateLastDate(todayDate, sortedDates, plusOneAge);

    return {
        minDate: todayDate,
        maxDate: lastDate,
        minPercent: Math.floor(sortedPercents[0]),
        maxPercent: Math.ceil(sortedPercents.at(-1)),
    }
    
}

//—Ñ—É–Ω–∫—Ü–∏—è —Ñ–∏–ª—å—Ç—Ä—É–µ—Ç –∏ –æ—Å—Ç–∞–≤–ª—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –∫–æ—Ç–æ—Ä—ã–µ –≤—ã—à–ª–∏ –∑–∞ –ø—Ä–∏–¥–µ–ª–∏ –≥–æ–¥–æ–≤ –∏ –ø—Ä–æ—Ü–µ–Ω—Ç–æ–≤ –æ—Ç min –¥–æ max.
export function filterPointsWithinBorder(listData, calcsStrips) {
return listData.filter(
    (obj) =>
      obj.percent >= calcsStrips.minPercent &&
      obj.percent <= calcsStrips.maxPercent &&
      obj.endDate >= calcsStrips.minDate &&
      obj.endDate <= calcsStrips.maxDate
  )

}

// –æ–±–æ—Ä–∞—á–∏–≤–∞—é –≤—ã—á–∏—Å–ª–µ–Ω–∏—è –≤ —Ñ—É–Ω–∫—Ü–∏–∏ handlePointerUp  —Å–æ–∑–¥–∞–Ω–Ω–∞—è –≤ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–µ.
export function calcEmphasizeSquare ( calcsStrips, selectionBox) {
    console.log(calcsStrips, selectionBox, '^^^')
    const { x, y, width, height } = selectionBox;
    const { minDate, maxDate, minPercent, maxPercent } = calcsStrips;

     // 2030     ‚Üì                                   2050
    // |--------√ó-----------------------------------|
    // 0px      100px                               500px

    // 2030 + (2050 -2030) √ó 0.2 = 2034

    // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –¥–∞—Ç—ã –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥—ã
    const minDateMs = date2ms(minDate);
    const maxDateMs = date2ms(maxDate);
    //–≤—ã—á–∏—Å–ª–µ–Ω–∏–µ –¥–ª—è –≥–æ–¥–æ–≤ –ø–æ –æ—Å–∏ x,  ms —É–º–Ω–æ–∂–∞–µ–Ω –Ω–∞ –ø—Ä–æ—Ü–µ–Ω—Ç—ã (–Ω–æ —ç—Ç–æ –Ω–µ –ø—Ä–æ—Ü–µ–Ω—Ç—ã. –∞ –¥—Ä–æ–±—å 0.185 = 18.5%)
    const minDateNew = minDateMs + (maxDateMs - minDateMs) * x;
    const maxDateNew = minDateMs + (maxDateMs - minDateMs) * (x + width);

    // –ù–æ–≤—ã–µ –≥—Ä–∞–Ω–∏—Ü—ã –ø–æ X (–¥–∞—Ç—ã)
    const minDateAfter = new Date(minDateNew).toISOString().split('T')[0];
    const maxDateAfter = new Date(maxDateNew).toISOString().split('T')[0];

    // // –ù–æ–≤—ã–µ –≥—Ä–∞–Ω–∏—Ü—ã –ø–æ Y (–ø—Ä–æ—Ü–µ–Ω—Ç—ã)
    let newMinPercent =
      minPercent + (maxPercent - minPercent) * (1 - (y + height));
    let newMaxPercent = minPercent + (maxPercent - minPercent) * (1 - y);

    return {
        minDate: minDateAfter,
        maxDate: maxDateAfter,
        minPercent: newMinPercent,
        maxPercent: newMaxPercent,
      }

}