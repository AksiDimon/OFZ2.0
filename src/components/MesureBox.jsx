import { useLayoutEffect, useRef, useState } from 'react';

 export function MeasuredBox() {
  const ref = useRef(null);
  const [height, setHeight] = useState(0);

  useLayoutEffect(() => {
    // –°—Ä–∞–∑—É –ø–æ—Å–ª–µ —Ä–µ–Ω–¥–µ—Ä–∞, –¥–æ paint, –∑–∞–º–µ—Ä–∏–º –≤—ã—Å–æ—Ç—É
    if (ref.current) {
      const rect = ref.current.getBoundingClientRect();
      setHeight(rect.height);
      // –ú–æ–∂–µ–º —Å—Ä–∞–∑—É –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∏–ª–∏ –∏–ª–∏ state, —á—Ç–æ–±—ã
      // –±—Ä–∞—É–∑–µ—Ä —Å—Ä–∞–∑—É –æ—Ç—Ä–∏—Å–æ–≤–∞–ª –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ —Ä–∞–∑–º–µ—Ä—ã
      console.log('MeasuredBox', 'üé∂', rect)
      //–ø–µ—Ä–µ–¥–≤–∏–≥–∞–µ–º –Ω–∞ 300px –≤–Ω–∏–∑  –¥–æ –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–Ω–Ω–æ 
      ref.current.style.marginTop = '10vh';
    }
    console.log('MeasuredBox', 'üëåüèæ', ref)
  }, []); // —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –æ–¥–∏–Ω —Ä–∞–∑ –ø–æ—Å–ª–µ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
console.log( ref)
  return (
    <div>
      <div ref={ref}>
        –°–æ–¥–µ—Ä–∂–∏–º–æ–µ, —Ä–∞–∑–º–µ—Ä –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω—É–∂–Ω–æ —É–∑–Ω–∞—Ç—å
      </div>
      <p>–í—ã—Å–æ—Ç–∞ –±–ª–æ–∫–∞: {height}px</p>
    </div>
  );
}