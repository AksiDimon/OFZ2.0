import {useRef, useState} from 'react'
export function useFollow (points) {
    const [hoverX, setHoverX] = useState(null) // –ü–æ–∑–∏—Ü–∏—è –º—ã—à–∏ –ø–æ –æ—Å–∏ X
    const [hoverPoint, setHoverPoint] = useState(null) // –ë–ª–∏–∂–∞–π—à–∞—è —Ç–æ—á–∫–∞ –Ω–∞ –≥—Ä–∞—Ñ–∏–∫–µ
    const divRef = useRef(null);

    
const handleMouseMove = (e) => {
    const rect = divRef.current.getBoundingClientRect()// –ì—Ä–∞–Ω–∏—Ü—ã –≥—Ä–∞—Ñ–∏–∫–∞
    const mouseX = e.clientX - rect.left; // –ü–æ–∑–∏—Ü–∏—è –º—ã—à–∏ –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ –≥—Ä–∞—Ñ–∏–∫–∞
    const graphWidth = rect.width;

    // –ù–æ—Ä–º–∞–ª–∏–∑—É–µ–º –ø–æ–∑–∏—Ü–∏—é –º—ã—à–∏ (–æ—Ç 0 –¥–æ 1)
    const xRatio = mouseX / graphWidth;

    // –ù–∞—Ö–æ–¥–∏–º –±–ª–∏–∂–∞–π—à—É—é —Ç–æ—á–∫—É –Ω–∞ –≥—Ä–∞—Ñ–∏–∫–µ
    const closestPoint = points.reduce((prev, curr) => {
        // console.log(prev, curr)
        return Math.abs(curr.x - xRatio) < Math.abs(prev.x - xRatio) ? curr : prev
    }
        
    );
    // console.log(closestPoint, 'üåà')
    setHoverX(mouseX); // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–∑–∏—Ü–∏—é –º—ã—à–∏
    setHoverPoint(closestPoint); // –°–æ—Ö—Ä–∞–Ω—è–µ–º –±–ª–∏–∂–∞–π—à—É—é —Ç–æ—á–∫—É
};

const handleMouseLeave = () => {
    setHoverX(null); // –°–∫—Ä—ã–≤–∞–µ–º –∫—É—Ä—Å–æ—Ä
    setHoverPoint(null);
};

return {divRef,hoverX, hoverPoint, handleMouseMove, handleMouseLeave}
}
   